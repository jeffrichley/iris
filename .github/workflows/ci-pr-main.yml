name: CI - PR to Main Full Validation

# Workflow B: Comprehensive validation for PRs to main
# Runs on: Pull request targeting main branch
# Purpose: Full validation (lint + type-check + tests + coverage + security)
# Expected time: 10-15 minutes with caching

on:
  pull_request:
    branches:
      - main

jobs:
  comprehensive-validation:
    name: Test (${{ matrix.os }}, Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os:
          - ubuntu-latest    # ubuntu-24.04 (current LTS)
          - ubuntu-22.04     # Previous LTS
          - windows-latest   # windows-2025 (newest)
          - windows-2022     # Previous stable
          - macos-latest     # macos-15 (Apple Silicon)
          - macos-14         # Apple Silicon previous
        python-version: ['3.12', '3.13']
        node-version: ['20.x']
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.cache/pip
            ~/AppData/Local/uv/cache
            ~/Library/Caches/uv
            frontend/node_modules
          key: ${{ runner.os }}-deps-py${{ matrix.python-version }}-node${{ matrix.node-version }}-${{ hashFiles('**/pyproject.toml', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-py${{ matrix.python-version }}-node${{ matrix.node-version }}-
            ${{ runner.os }}-deps-
      
      - name: Install uv
        run: |
          pip install uv
      
      - name: Install Python dependencies
        run: |
          uv sync --dev
      
      - name: Install frontend dependencies (if exists)
        run: |
          if (Test-Path frontend/package.json) {
            cd frontend
            npm install
          } else {
            Write-Host "Frontend not yet set up - skipping"
          }
        shell: pwsh
      
      - name: Run Python linting
        run: |
          uv run ruff check .
      
      - name: Run Python type checking
        run: |
          uv run mypy src/
      
      - name: Run frontend linting (if exists)
        run: |
          if (Test-Path frontend/package.json) {
            cd frontend
            npm run lint
          } else {
            Write-Host "Frontend not yet set up - skipping"
          }
        shell: pwsh
      
      - name: Run frontend type checking (if exists)
        run: |
          if (Test-Path frontend/tsconfig.json) {
            cd frontend
            npm run type-check
          } else {
            Write-Host "Frontend not yet set up - skipping"
          }
        shell: pwsh
      
      - name: Run tests with coverage
        run: |
          uv run pytest --cov=src --cov-report=xml --cov-report=term --cov-report=html
      
      - name: Check coverage threshold
        run: |
          uv run coverage report --fail-under=80
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          flags: unittests
          name: codecov-umbrella
      
      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        with:
          name: coverage-report
          path: |
            coverage.xml
            htmlcov/
          retention-days: 30
      
      - name: Workflow summary
        if: always()
        run: |
          Write-Host "========================================" -ForegroundColor Cyan
          Write-Host "Comprehensive Validation Complete!" -ForegroundColor Green
          Write-Host "OS: ${{ matrix.os }}" -ForegroundColor Yellow
          Write-Host "Python: ${{ matrix.python-version }}" -ForegroundColor Yellow
          Write-Host "Node: ${{ matrix.node-version }}" -ForegroundColor Yellow
          Write-Host "========================================" -ForegroundColor Cyan
        shell: pwsh
  
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install uv
        run: |
          pip install uv
      
      - name: Install dependencies
        run: |
          uv sync --dev
      
      - name: Run Bandit security scan
        run: |
          uv run bandit -r src/ -f json -o bandit-report.json || true
          uv run bandit -r src/ --severity-level medium
      
      - name: Run Safety dependency scan
        run: |
          uv run safety check --json --output safety-report.json || true
          python scripts/safety-policy-check.py safety-report.json
      
      - name: Run npm audit (if frontend exists)
        run: |
          if (Test-Path frontend/package.json) {
            cd frontend
            npm audit --audit-level=moderate
          } else {
            Write-Host "Frontend not yet set up - skipping npm audit"
          }
        shell: pwsh
      
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
          retention-days: 90

